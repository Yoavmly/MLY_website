.services-block {
  display: flex;
  position: relative;
  justify-content: flex-start;
  align-items: flex-start; /* Changed to flex-start to align containers at the top */
  flex-wrap: nowrap;
  z-index: 2;
  width: 100%;
  height: 37.5rem;
  overflow-x: auto; /* Allow horizontal scrolling if content overflows */
  overflow-y: hidden; /* Hide vertical overflow */
  padding-bottom: 0; /* Remove padding-bottom from services-block */
  box-sizing: border-box; /* Include padding in width calculation */
  scroll-snap-type: x mandatory; /* Enable snap scrolling on X axis */
  -webkit-overflow-scrolling: touch; /* Enable smooth scrolling on iOS */

  .services-container {
    display: flex; /* Make services-container a flex container */
    flex-direction: row; /* Arrange service-item and arrow-block in a row */
    flex-wrap: nowrap;
    position: relative; /* For positioning arrow-block */
    z-index: 2;
    width: 25%; /* Or adjust as needed */
    height: 100%;
    padding-bottom: 0; /* Remove padding-bottom from services-container */
    box-sizing: border-box;
    scroll-snap-align: start; /* Snap containers to the start */

    &:last-child {
      margin-right: 0; /* Remove margin from the last container */
    }

    .service-item {
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      z-index: 2;
      width: 100%;
      height: calc(100% - var(--hover-translate, -50px));
      position: relative; /* For positioning service-content */
      overflow: hidden; /* Clip content that goes outside */
      transition: transform 0.5s ease; /* Smoother transition */
      transform: translateY(0); /* Initial position - no initial translateY */
      background-position: center; /* Background image position */
      background-repeat: no-repeat;
      background-size: cover; /* Cover the entire service-item area */

      &:hover {
        transform: translateY(var(--hover-translate, -50px)); /* Use CSS variable, with a default fallback */
      }

      .service-content {
        z-index: 2;
        position: absolute; /* Position content at the bottom */
        //bottom: 0;
        top:calc(20% - var(--hover-translate, -50px));
        left: 0;
        padding: 2rem;
        display: flex;
        flex-direction: column;
        width: 100%;
        color: black;
        box-sizing: border-box; /* Include padding in width and height calculation */
      }
    }

    .arrow-block {
      position: absolute; /* Keep absolute positioning */
      bottom: 0;          /* Align to the bottom of services-container */
      right: 0;           /* Align to the right of services-container */
      z-index: 3;
      width: 100%;
      height: auto; /* Adjust height to content */
      display: flex;
      align-items: center;
      justify-content: flex-start; /* Center the arrow horizontally in the block */
      padding: 1rem 2rem;
      box-sizing: border-box;
      pointer-events: none;

      img.arrow {
        display: block;
        height: auto;
        width: auto;
        max-height: 50px; /* Adjust as needed */
        max-width: 50px;  /* Adjust as needed */
      }
    }
  }
}
